---
# Source: deployment/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wa-api
  labels:
    helm.sh/chart: deployment-0.1.0
    app.kubernetes.io/name: wa-api
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: wa-api
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: deployment/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wa-api
  labels:
    helm.sh/chart: deployment-0.1.0
    app.kubernetes.io/name: wa-api
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wa-api
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wa-api
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: deployment
          securityContext:
            {}
          image: "asia.gcr.io/stafsus-35cc5/wa:v1"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              value: wa-pgsql-postgresql
            - name: DB_PORT
              value: 5432
            - name: DB_USER
              value: postgres
            - name: DB_PASSWORD
              value: A809P7iGk8
            - name: DB_NAME
              value: wa

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
